{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"HTTPError": {
				"properties": {
					"code": {
						"type": "number",
						"format": "double"
					},
					"details": {
						"type": "string"
					},
					"additional_info": {}
				},
				"required": [
					"code",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result": {
				"properties": {
					"result": {},
					"error": {
						"$ref": "#/components/schemas/HTTPError"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"errorMsg": {
				"properties": {
					"message": {
						"type": "string"
					},
					"additional_info": {}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEvent": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"startedAt": {
						"type": "string"
					},
					"endedAt": {
						"type": "string"
					},
					"communityId": {
						"type": "number",
						"format": "double"
					},
					"isPublic": {
						"type": "boolean"
					},
					"imageId": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					},
					"site": {
						"type": "string"
					},
					"capacity": {
						"type": "number",
						"format": "double"
					},
					"additionalInfo": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"startedAt",
					"isPublic",
					"type",
					"site",
					"capacity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICommunity": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"locationId": {
						"type": "number",
						"format": "double"
					},
					"imageId": {
						"type": "number",
						"format": "double"
					},
					"bannerImageId": {
						"type": "number",
						"format": "double"
					},
					"tagIds": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITopic": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"imageId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUser": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"password1": {
						"type": "string"
					},
					"fullname": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"locationId": {
						"type": "number",
						"format": "double"
					},
					"interests": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"imageId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"email",
					"password",
					"password1",
					"fullname",
					"username",
					"locationId",
					"interests"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRefreshToken": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ILogin": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEmail": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResetPw": {
				"properties": {
					"password1": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"password1",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"accessToken": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/communities/{CID}/events": {
			"post": {
				"operationId": "CreateEvent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"id": 1
											}
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Unathorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "You are not an admin of this community"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to get community"
										}
									}
								}
							}
						}
					}
				},
				"description": "Create events in a community",
				"tags": [
					"Community"
				],
				"security": [],
				"parameters": [
					{
						"description": "Community ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IEvent"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"id": 1,
												"name": "Komunitas IT",
												"slug": null,
												"description": "Komunitas IT",
												"createdAt": "2022-04-01T20:07:48.687Z",
												"updatedAt": "2022-04-01T20:07:48.687Z",
												"events": []
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to get community"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get events in a community",
				"tags": [
					"Community"
				],
				"security": [],
				"parameters": [
					{
						"description": "Community ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "true to get upcoming events or false to get past events",
						"in": "query",
						"name": "upcoming",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/communities/{CID}": {
			"get": {
				"operationId": "GetCommunityDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"id": 1,
												"name": "Komunitas IT",
												"slug": "komunitas-it",
												"description": "Komunitas hantu bawa balon",
												"locationId": 1,
												"imageId": 1,
												"createdAt": "2022-03-18T14:34:40.159Z",
												"updatedAt": "2022-03-18T14:34:40.159Z"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get community detail"
										}
									}
								}
							}
						}
					}
				},
				"description": "Retrieves a community's detail",
				"tags": [
					"Community"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"description": "The community's ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"name": "communitree"
											}
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "You are not admin of this community"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to update community"
										}
									}
								}
							}
						}
					}
				},
				"description": "Update a communitywith the corresponding ID",
				"tags": [
					"Community"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"description": "The community's ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICommunity"
							}
						}
					}
				}
			}
		},
		"/communities/{CID}/members": {
			"get": {
				"operationId": "GetMembersId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": [
												{
													"id": 1
												}
											]
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get community members"
										}
									}
								}
							}
						}
					}
				},
				"description": "Retrieves a community's members",
				"tags": [
					"Community"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"description": "The community's ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/communities/{CID}/members/count": {
			"get": {
				"operationId": "GetMembersCount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": 9
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get community members count"
										}
									}
								}
							}
						}
					}
				},
				"description": "Retrieves a community's members count",
				"tags": [
					"Community"
				],
				"security": [],
				"parameters": [
					{
						"description": "The community's ID",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/communities": {
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Successfully created community",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": "communitree"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to create community"
										}
									}
								}
							}
						}
					}
				},
				"description": "Creates a new community and set the creator as admin",
				"tags": [
					"Community"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICommunity"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetCommunities",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": [
												{
													"id": 20,
													"name": "Komunitas IT",
													"slug": null,
													"description": "Komunitas IT",
													"createdAt": "2022-04-01T18:36:39.146Z",
													"updatedAt": "2022-04-01T18:36:39.146Z",
													"hasTags": [],
													"locatedOn": null,
													"hasImage": null
												},
												{
													"id": 21,
													"name": "Komunitas Otomotif",
													"slug": null,
													"description": "Komunitas ",
													"createdAt": "2022-04-01T18:36:39.146Z",
													"updatedAt": "2022-04-01T18:36:39.146Z",
													"hasTags": [],
													"locatedOn": {
														"city": "Jakarta",
														"stateProvince": "DKI Jakarta",
														"country": "Indonesia",
														"postalCode": "40136"
													},
													"hasImage": {
														"url": "./foto.png"
													}
												}
											]
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to retrieve communities"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all communities",
				"tags": [
					"Community"
				],
				"security": [],
				"parameters": []
			}
		},
		"/communities/{CID}/members/status": {
			"get": {
				"operationId": "GetMembershipStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"status": "member"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "User not authorized"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed to get community"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get user's membership status in a community",
				"tags": [
					"Community"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"description": "id of the community",
						"in": "path",
						"name": "CID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/events": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"events": [
													{
														"id": 1,
														"name": "Event 1",
														"description": "Event 1 description",
														"startDate": "2020-01-01",
														"endDate": "2020-01-01",
														"communityId": 1,
														"participants": [
															{
																"id": 1,
																"name": "John Doe",
																"email": "johndoa@doe.com",
																"phone": "123456789",
																"isAdmin": false
															}
														]
													}
												]
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get events"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Event"
				],
				"security": [],
				"parameters": []
			}
		},
		"/events/{EID}/join": {
			"post": {
				"operationId": "Join",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {}
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Event is full"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "community not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Community not found"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Event"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "EID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/files/upload-pp": {
			"post": {
				"operationId": "UploadPP",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"id": 9999,
												"url": "iniurl.com/2022/04/12/78fdf0e7-101c-418b-86c8-14712f3c8c28.jpg"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Cannot upload photo profile"
										}
									}
								}
							}
						}
					}
				},
				"description": "Uploads profile picture of user",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								},
								"required": [
									"file"
								]
							}
						}
					}
				}
			}
		},
		"/files": {
			"post": {
				"operationId": "Upload",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result",
									"properties": {
										"url": {
											"type": "string"
										}
									}
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"id": 9999,
												"url": "iniurl.com/2022/04/12/78fdf0e7-101c-418b-86c8-14712f3c8c28.jpg"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Cannot upload photo"
										}
									}
								}
							}
						}
					}
				},
				"description": "Uploads profile picture of user",
				"tags": [
					"Files"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								},
								"required": [
									"file"
								]
							}
						}
					}
				}
			}
		},
		"/files/{ID}": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": null
									}
								}
							}
						}
					},
					"404": {
						"description": "file not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "File not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Cannot delete file"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"Files"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "ID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/locations": {
			"get": {
				"operationId": "GetLocations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": [
												{
													"id": 1,
													"city": "Bandung",
													"stateProvince": "Jawa Barat",
													"country": "Indonesia",
													"postalCode": "40135",
													"createdAt": "2022-04-14T08:06:40.294Z",
													"updatedAt": "2022-04-14T08:06:40.294Z"
												},
												{
													"id": 2,
													"city": "Jakarta",
													"stateProvince": "DKI Jakarta",
													"country": "Indonesia",
													"postalCode": "40136",
													"createdAt": "2022-04-14T08:06:40.294Z",
													"updatedAt": "2022-04-14T08:06:40.294Z"
												}
											]
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get locations, ask administrator"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all locations",
				"tags": [
					"Location"
				],
				"security": [],
				"parameters": []
			}
		},
		"/topics": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": {
												"name": "Topic 1"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Server error, cannot create topic"
										}
									}
								}
							}
						}
					}
				},
				"description": "render",
				"tags": [
					"Topic"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ITopic"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetTopics",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": [
												{
													"id": 1,
													"name": "programming",
													"description": "create a program",
													"createdAt": "2022-04-08T06:13:51.594Z",
													"updatedAt": "2022-04-08T06:13:51.594Z",
													"imageId": null
												},
												{
													"id": 2,
													"name": "math",
													"description": "calculate",
													"createdAt": "2022-04-08T06:13:51.594Z",
													"updatedAt": "2022-04-08T06:13:51.594Z",
													"imageId": null
												}
											]
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Topic not found"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get all topics",
				"tags": [
					"Topic"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/signup": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Register success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"data": "capeppl@gmail.com"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid input",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Passwords must have at least 8 char, contains 1 lowercase, 1 uppercase, 1 number, 1 symbol"
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Email or username already used"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Invalid input",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed during input validation"
										}
									}
								}
							}
						}
					}
				},
				"description": "Registrasi user",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUser"
							}
						}
					}
				}
			}
		},
		"/users/refresh": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Refresh token success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"accessToken": "secrettoken",
											"refreshToken": "secrettoken"
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Invalid token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Invalid refresh token"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Input non valid",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Failed during input validation"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not refresh"
										}
									}
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRefreshToken"
							}
						}
					}
				}
			}
		},
		"/users/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								},
								"examples": {
									"Example 1": {
										"value": {
											"accessToken": "secrettoken",
											"refreshToken": "secrettoken"
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Invalid Input",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Invalid email or password"
										}
									}
								}
							}
						}
					}
				},
				"description": "Login",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILogin"
							}
						}
					}
				}
			}
		},
		"/users/forget-password": {
			"post": {
				"operationId": "ForgetPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "User not found"
										}
									}
								}
							}
						}
					}
				},
				"description": "Send password reset to user's email",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IEmail"
							}
						}
					}
				}
			}
		},
		"/users/reset-password/{UID}/{token}": {
			"post": {
				"operationId": "ResetPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result"
								}
							}
						}
					},
					"400": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Passwords don't match"
										}
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Invalid token"
										}
									}
								}
							}
						}
					}
				},
				"description": "Reset user's password",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"description": "the user's ID",
						"in": "path",
						"name": "UID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "the user's token",
						"in": "path",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IResetPw"
							}
						}
					}
				}
			}
		},
		"/users/profile": {
			"get": {
				"operationId": "GetProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Result",
									"properties": {
										"id": {
											"type": "number"
										},
										"username": {
											"type": "string"
										},
										"fullname": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"lastLogin": {
											"type": "string",
											"format": "datetime"
										},
										"hasImage": {
											"type": "object",
											"properties": {
												"fileName": {
													"type": "string"
												},
												"mimeType": {
													"type": "string"
												},
												"url": {
													"type": "string"
												},
												"size": {
													"type": "number"
												},
												"extension": {
													"type": "string"
												}
											}
										},
										"locatedOn": {
											"type": "object",
											"properties": {
												"city": {
													"type": "string"
												},
												"stateProvince": {
													"type": "string"
												},
												"country": {
													"type": "string"
												},
												"postalCode": {
													"type": "number"
												}
											}
										},
										"interestedIn": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"imageId": {
														"type": "number"
													}
												}
											}
										}
									}
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": 7,
											"fullname": "Ini Nama Panjang",
											"username": "username",
											"email": "semangatintegrasi@gmail.com",
											"lastLogin": "2022-04-01T18:46:19.576Z",
											"hasImage": null,
											"locatedOn": {
												"city": "Bandung",
												"stateProvince": "Washington AC",
												"country": "Inazuma",
												"postalCode": "81451",
												"createdAt": "2022-04-01T18:37:13.474Z",
												"updatedAt": "2022-04-01T18:37:13.474Z",
												"imageId": null
											},
											"interestedIn": {
												"name": "Genshin Tidak Impact",
												"description": "Yes",
												"createdAt": "2022-04-01T18:37:13.474Z",
												"updatedAt": "2022-04-01T18:37:13.474Z",
												"imageId": null
											},
											"joinedIn": "2022-04-01T18:37:13.474Z"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "User not authorized"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/errorMsg"
								},
								"examples": {
									"Example 1": {
										"value": {
											"message": "Could not get profile, ask administrator"
										}
									}
								}
							}
						}
					}
				},
				"description": "Get user's profile detail",
				"tags": [
					"User"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"parameters": []
			}
		},
		"/users/signout": {
			"post": {
				"tags": [
					"User"
				],
				"security": [
					{
						"accessToken": []
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api/v1"
		}
	]
}